{"version":3,"sources":["addStockForm.js","config/iex.js","getstock.js","App.js","serviceWorker.js","index.js"],"names":["AddStockForm","state","ticker","quantity","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","props","onSubmit","id","shortid","generate","this","onChange","placeholder","type","React","Component","iex","StockRow","dataThen","data","thenPrice","nowPrice","Math","round","prevProps","fromDate","console","log","url","fetch","then","response","json","length","newurl","close","calcGL","document","getElementById","style","color","App","addStock","stockData","newStockList","stocks","unit","num","thenDate","getThenDate","today","Date","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","dd","mm","yyyy","t","getElemenetById","className","e","defaultValue","getTotalGL","map","stock","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2af1a70e.chunk.js","sourcesContent":["import React from 'react';\r\nimport shortid from 'shortid';\r\nexport default class AddStockForm extends React.Component {\r\n    state = {\r\n        ticker: '',\r\n        quantity: ''\r\n    }\r\n    handleChange = (event) => {\r\n        \r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n        \r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit({\r\n            id: shortid.generate(),\r\n            ticker: this.state.ticker,\r\n            quantity: this.state.quantity\r\n        });\r\n        this.setState({\r\n            ticker:\"\",\r\n            quantity:\"\"\r\n        })\r\n    }\r\n    render() {\r\n        return(\r\n            \r\n        <form onSubmit={this.handleSubmit}>\r\n        <input name=\"ticker\" value={this.state.ticker} onChange={this.handleChange} placeholder=\"ticker\"></input>\r\n        <input name=\"quantity\" value={this.state.quantity} onChange={this.handleChange} placeholder=\"quantity\"></input>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n        );}\r\n}","export const iex = {\r\n    api_token: \"pk_ad94bab71ebf450c83c1ae8095fb8f53\",\r\n    base_url: 'https://cloud.iexapis.com/stable'\r\n};","import React, {Component} from 'react';\r\nimport {iex }from './config/iex.js'\r\nclass StockRow extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      dataThen: {},\r\n      data: {}\r\n    }\r\n  }\r\ncalcGL (quantity,thenPrice,nowPrice) {\r\n  return Math.round(((quantity*thenPrice)-(quantity*nowPrice))*100)/100;\r\n}\r\ncomponentDidUpdate (prevProps){\r\n  if (this.props.fromDate !== prevProps.fromDate){\r\n  console.log(this.props.fromDate);\r\n  //get da data here\r\n  const url = `${iex.base_url}/stock/${this.props.ticker}/chart/1d?token=${iex.api_token}&exactDate=${this.props.fromDate}&chartLast=1`;\r\n  console.log(url);\r\n  fetch(url)\r\n  .then((response) => response.json())\r\n  .then((dataThen) => {\r\n    console.log(dataThen);\r\n  if (dataThen.length > 0) {\r\n  this.setState({\r\n    dataThen: dataThen[dataThen.length -1]})\r\n  }});\r\n}\r\nelse {\r\n  console.log(\"didn't refresh b/c no change in date\")\r\n}\r\n}\r\n\r\ncomponentDidMount(){\r\n  console.log(this.props.fromDate);\r\n  //get da data here\r\n  const url = `${iex.base_url}/stock/${this.props.ticker}/chart/1d?token=${iex.api_token}&exactDate=${this.props.fromDate}&chartLast=1`;\r\n  console.log(url);\r\n  fetch(url)\r\n  .then((response) => response.json())\r\n  .then((dataThen) => {\r\n    console.log(dataThen);\r\n    if (typeof dataThen !== 'undefined'){\r\n    this.setState({\r\n    dataThen: dataThen[dataThen.length -1]})\r\n    } \r\n    \r\n  });\r\n  const newurl = `${iex.base_url}/stock/${this.props.ticker}/intraday-prices/1d?token=${iex.api_token}&chartLast=1`;\r\n  console.log(newurl);\r\n  fetch(newurl)\r\n  .then((response) => response.json())\r\n  .then((data) => {\r\n    console.log(data);\r\n  this.setState({\r\n    data: data[data.length -1]})\r\n });\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render () {\r\n\r\n    return <tr>\r\n      <td>{this.props.ticker}</td>\r\n      <td>{this.props.quantity}</td>\r\n      <td>{\"$\" +this.state.dataThen.close}</td>\r\n      <td>{\"$\" + this.state.data.close}</td>\r\n      <td id=\"gl\">{\"$\" +this.calcGL(this.props.quantity,this.state.dataThen.close,this.state.data.close)}</td>\r\n      <script>\r\n        {\r\n         function me() {\r\n          console.log(\"hi\") \r\n          if (document.getElementById(\"gl\").value > 0){\r\n                document.getElementById(\"gl\").style.color = \"green\"\r\n              } else {\r\n                document.getElementById(\"gl\").style.color = \"red\"\r\n              }\r\n        }}\r\n      </script>\r\n    </tr>\r\n  }\r\n\r\n\r\n  \r\n}\r\nexport default StockRow","import React from 'react';\n// AV key 6ZW29MUK1OBHL2ZD\n// IEX token pk_ad94bab71ebf450c83c1ae8095fb8f53 \nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport AddStockForm from './addStockForm';\nimport StockRow from './getstock';\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n    stocks: [],\n    unit: \"days\",\n    num: 1,\n    thenDate: this.getThenDate(0,'days'),\n\n  };\n  }\n\n  getThenDate(num,unit) {\n    console.log(\"num:\" + num + \"unit\" + unit)\n    var today = new Date()\n    if (unit === \"days\"){\n      console.log(num + 'days subtracted' )\n      today.setDate(today.getDate()-num);\n    }\n    else if (unit === \"months\"){\n      today.setMonth(today.getMonth() - num)\n    }\n    else if (unit === \"years\"){\n      today.setFullYear(today.getFullYear()- num)\n    }\n    else if (unit === \"decades\"){\n      today.setFullYear(today.getFullYear - (num*10))\n    }\n    var dd = today.getDate();\n    var mm = today.getMonth()+1; //As January is 0.\n    var yyyy = today.getFullYear();\n    if(dd<10) dd='0'+dd;\n    if(mm<10) mm='0'+mm;\n    console.log(yyyy+ mm+ dd)\n    return (yyyy+ mm+ dd);\n    \n  }\n\n\naddStock = (stockData) => {\n  const newStockList = [stockData, ...this.state.stocks]\n   this.setState({\n     stocks: newStockList\n   })\n  };\ngetTotalGL() {\n  var t = document.getElemenetById(\"table\")\n  console.log(t)\n}\n\n\n  render () { return (\n    <div>\n\n    <h1 className=\"Title\">\n      If Only I had Invested in (x) (n) ago!\n    </h1>\n    <div className=\"stonksBox\">\n      <h1>\n    Your Dream Portfolio <input type=\"number\" id=\"timeNumInput\" placeholder=\"1\" onChange={e => {this.setState({num:e.target.value});}}></input> \n    <select id=\"timeUnit\" defaultValue=\"days\" value={this.unit}>\n  <option value=\"days\">day(s)</option>\n  <option value=\"years\">year(s)</option>\n  <option value=\"decades\">decade(s)</option>\n</select> ago\n<br />\n\n<div>\n</div>\n      </h1>\n    </div>\n    <div className=\"container\">\n      <table id=\"table\" className=\"table mt-5\">\n        <thead>\n          <tr>\n            <th>Ticker</th>\n            <th>Quantity</th>\n            <th>Price Then</th>\n            <th>Price Now</th>\n            <th>Gain/Loss</th>\n          </tr>\n        </thead>\n        <tbody onChange={this.getTotalGL}>\n        {this.state.stocks.map(stock =><StockRow ticker={stock.ticker} quantity={stock.quantity} key={stock.id} fromDate={this.getThenDate(this.state.num,this.state.unit)}/>)}\n        </tbody>\n      </table>\n    <div>\n    <br>\n    </br>\n    {this.getTotalGL}\n    <AddStockForm onSubmit={this.addStock} /></div>\n\n    </div>\n <div>\n \n </div>\n    </div>\n\n);\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}